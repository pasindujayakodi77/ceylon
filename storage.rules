rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // User profile images used by the app are stored under:
    //   users/{userId}/profile/{filename}
    // Allow the image to be read publicly (so UI can display it) and allow
    // authenticated users to write/delete their own profile images.
    match /users/{userId}/profile/{allPaths=**} {
      allow read: if true;
      allow write, delete: if request.auth != null && request.auth.uid == userId;
    }

    // Business images are stored under: businesses/{ownerId}/{filename}
    // Allow public read and owner-only write/delete.
    match /businesses/{ownerId}/{allPaths=**} {
      allow read: if true;
      allow write, delete: if request.auth != null && request.auth.uid == ownerId;
    }

    // Journal media (app-specific) â€” keep owner-only access.
    match /journal/{userId}/{entryId}/{fileName} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow write: if request.auth != null && request.auth.uid == userId;
      allow delete: if request.auth != null && request.auth.uid == userId;
    }

    // Public assets (read-only)
    match /public/{allPaths=**} {
      allow read: if true;
      allow write: if false;
    }

    // Default: deny everything else
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}
rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Allow authenticated users to read/write their own profile images
    match /users/{userId}/profile/{allPaths=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Public read-only assets
    match /public/{allPaths=**} {
      allow read: if true;
    }

    // Default deny
    match /{allPaths=**} {
      allow read: if false;
      allow write: if false;
    }
  }
}
